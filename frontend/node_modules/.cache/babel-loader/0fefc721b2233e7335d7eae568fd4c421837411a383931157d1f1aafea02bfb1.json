{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport createFilter from \"redux-persist-transform-filter\";\nimport storage from \"redux-persist/lib/storage\";\n\n//slices\nimport userSlice from \"../features/userSlice\";\n\n//saveUserOnlyFilter\nconst saveUserOnlyFilter = createFilter(\"user\", [\"user\"]);\n\n//persist config\nconst persistConfig = {\n  key: \"user\",\n  storage,\n  whitelist: [\"user\"],\n  transforms: [saveUserOnlyFilter]\n};\n\n//slices\nconst rootReducer = combineReducers({\n  user: userSlice || {}\n});\n\n//persisted reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }),\n  devTools: true\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","persistReducer","persistStore","createFilter","storage","userSlice","saveUserOnlyFilter","persistConfig","key","whitelist","transforms","rootReducer","user","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","devTools","persistor"],"sources":["C:/react/proyects-master/whatsapp-clone/frontend/src/app/store.js"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport createFilter from \"redux-persist-transform-filter\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\n//slices\r\nimport userSlice from \"../features/userSlice\";\r\n\r\n//saveUserOnlyFilter\r\nconst saveUserOnlyFilter = createFilter(\"user\", [\"user\"]);\r\n\r\n//persist config\r\nconst persistConfig = {\r\n  key: \"user\",\r\n  storage,\r\n  whitelist: [\"user\"],\r\n  transforms: [saveUserOnlyFilter],\r\n};\r\n\r\n//slices\r\nconst rootReducer = combineReducers({\r\n  user: userSlice || {},\r\n});\r\n\r\n//persisted reducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware({\r\n        serializableCheck: false,\r\n      }),\r\n    devTools: true,\r\n  });\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,OAAO,MAAM,2BAA2B;;AAE/C;AACA,OAAOC,SAAS,MAAM,uBAAuB;;AAE7C;AACA,MAAMC,kBAAkB,GAAGH,YAAY,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC;;AAEzD;AACA,MAAMI,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXJ,OAAO;EACPK,SAAS,EAAE,CAAC,MAAM,CAAC;EACnBC,UAAU,EAAE,CAACJ,kBAAkB;AACjC,CAAC;;AAED;AACA,MAAMK,WAAW,GAAGZ,eAAe,CAAC;EAClCa,IAAI,EAAEP,SAAS,IAAI,CAAC;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMQ,gBAAgB,GAAGZ,cAAc,CAACM,aAAa,EAAEI,WAAW,CAAC;AAEnE,OAAO,MAAMG,KAAK,GAAGd,cAAc,CAAC;EAChCe,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EACJC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEJ,OAAO,MAAMC,SAAS,GAAGlB,YAAY,CAACY,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}