{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\proyects-master\\\\whatsapp-clone\\\\frontend\\\\src\\\\components\\\\auth\\\\Picture.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Picture({\n  readablePicture,\n  setReadablePicture,\n  setPicture\n}) {\n  _s();\n  const [error, setError] = useState(\"\");\n  const handlePicture = e => {\n    let pic = e.target.files[0];\n    if (pic.type === \"image/jpeg\" && pic.type === \"image/png\" && pic.type === \"image/jpg\" && pic.type === \"image/webp\") {\n      setError(`${pic.name} format is not supported`);\n      return;\n    } else if (pic.size > 1024 * 1024 * 5) {\n      setError(`${pic.name} is too large, maximum 5mb allowed.`);\n      return;\n    } else {\n      setError(\"\");\n      setPicture(pic);\n      //reading the picture\n      const reader = new FileReader();\n      reader.readAsDataURL(pic);\n      reader.onload = e => {\n        setReadablePicture(e.target.result);\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"amen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n_s(Picture, \"Wysf5k9/9rbzWl+spWgJpEWy35U=\");\n_c = Picture;\nexport default Picture;\nvar _c;\n$RefreshReg$(_c, \"Picture\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","Picture","readablePicture","setReadablePicture","setPicture","_s","error","setError","handlePicture","e","pic","target","files","type","name","size","reader","FileReader","readAsDataURL","onload","result","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react/proyects-master/whatsapp-clone/frontend/src/components/auth/Picture.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\r\n\r\nfunction Picture({ readablePicture, setReadablePicture, setPicture }) {\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handlePicture = (e) => {\r\n    let pic = e.target.files[0];\r\n    if (\r\n      pic.type === \"image/jpeg\" &&\r\n      pic.type === \"image/png\" &&\r\n      pic.type === \"image/jpg\" &&\r\n      pic.type === \"image/webp\"\r\n    ) {\r\n      setError(`${pic.name} format is not supported`);\r\n      return;\r\n    }else if(pic.size > 1024 * 1024*5){\r\n      setError(`${pic.name} is too large, maximum 5mb allowed.`);\r\n      return;\r\n  }else{\r\n      setError(\"\");\r\n      setPicture(pic);\r\n      //reading the picture\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(pic);\r\n      reader.onload = (e) => {\r\n        setReadablePicture(e.target.result);\r\n      };\r\n    }\r\n  }\r\n\r\n  return <div>amen</div>;\r\n}\r\n\r\nexport default Picture;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,OAAOA,CAAC;EAAEC,eAAe;EAAEC,kBAAkB;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIC,GAAG,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3B,IACEF,GAAG,CAACG,IAAI,KAAK,YAAY,IACzBH,GAAG,CAACG,IAAI,KAAK,WAAW,IACxBH,GAAG,CAACG,IAAI,KAAK,WAAW,IACxBH,GAAG,CAACG,IAAI,KAAK,YAAY,EACzB;MACAN,QAAQ,CAAC,GAAGG,GAAG,CAACI,IAAI,0BAA0B,CAAC;MAC/C;IACF,CAAC,MAAK,IAAGJ,GAAG,CAACK,IAAI,GAAG,IAAI,GAAG,IAAI,GAAC,CAAC,EAAC;MAChCR,QAAQ,CAAC,GAAGG,GAAG,CAACI,IAAI,qCAAqC,CAAC;MAC1D;IACJ,CAAC,MAAI;MACDP,QAAQ,CAAC,EAAE,CAAC;MACZH,UAAU,CAACM,GAAG,CAAC;MACf;MACA,MAAMM,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,aAAa,CAACR,GAAG,CAAC;MACzBM,MAAM,CAACG,MAAM,GAAIV,CAAC,IAAK;QACrBN,kBAAkB,CAACM,CAAC,CAACE,MAAM,CAACS,MAAM,CAAC;MACrC,CAAC;IACH;EACF,CAAC;EAED,oBAAOpB,OAAA;IAAAqB,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACxB;AAACpB,EAAA,CA7BQJ,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}