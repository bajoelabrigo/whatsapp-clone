{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst AUTH_ENDPOINT = `${process.env.REACT_APP_API_ENDPOINT}/auth`;\nconst initialState = {\n  status: \"\",\n  error: \"\",\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    picture: \"\",\n    status: \"\",\n    token: \"\"\n  }\n};\nexport const registerUser = createAsyncThunk(\"auth/register\", async (values, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${AUTH_ENDPOINT}/register`, {\n      ...values\n    });\n    return data;\n  } catch (err) {\n    return rejectWithValue(err.response.data.error.message);\n  }\n});\nexport const loginUser = createAsyncThunk(\"auth/login\", async (values, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await axios.post(`${AUTH_ENDPOINT}/login`, {\n      ...values\n    });\n    return data;\n  } catch (error) {\n    return rejectWithValue(error.response.data.error.message);\n  }\n});\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    logout: state => {\n      state.status = \"\";\n      state.error = \"\";\n      state.user = {\n        id: \"\",\n        name: \"\",\n        email: \"\",\n        picture: \"\",\n        status: \"\",\n        token: \"\"\n      };\n    },\n    changeStatus: (state, action) => {\n      state.status = action.payload;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(registerUser.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.error = \"\";\n      state.user = action.payload.user;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    }).addCase(loginUser.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.error = \"\";\n      state.user = action.payload.user;\n    }).addCase(loginUser.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  logout,\n  changeStatus\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","AUTH_ENDPOINT","process","env","REACT_APP_API_ENDPOINT","initialState","status","error","user","id","name","email","picture","token","registerUser","values","rejectWithValue","data","post","err","response","message","loginUser","userSlice","reducers","logout","state","changeStatus","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["C:/react/proyects-master/whatsapp-clone/frontend/src/redux/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst AUTH_ENDPOINT = `${process.env.REACT_APP_API_ENDPOINT}/auth`;\r\n\r\nconst initialState = {\r\n  status: \"\",\r\n  error: \"\",\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    picture: \"\",\r\n    status: \"\",\r\n    token: \"\",\r\n  },\r\n};\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (values, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(`${AUTH_ENDPOINT}/register`, {\r\n        ...values,\r\n      });\r\n      return data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.data.error.message);\r\n    }\r\n  }\r\n);\r\nexport const loginUser = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (values, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post(`${AUTH_ENDPOINT}/login`, {\r\n        ...values,\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.status = \"\";\r\n      state.error = \"\";\r\n      state.user = {\r\n        id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        picture: \"\",\r\n        status: \"\",\r\n        token: \"\",\r\n      };\r\n    },\r\n    changeStatus: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n  },\r\n  extraReducers(builder) {\r\n    builder\r\n      .addCase(registerUser.pending, (state, action) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.error = \"\";\r\n        state.user = action.payload.user;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(loginUser.pending, (state, action) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(loginUser.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.error = \"\";\r\n        state.user = action.payload.user;\r\n      })\r\n      .addCase(loginUser.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout, changeStatus } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}