{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  name: \"\",\n  username: \"\",\n  email: \"\"\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    addUser: (state, action) => {\n      const {\n        name,\n        username,\n        email\n      } = action.payload;\n      state.name = name;\n      state.username = username;\n      state.email = email;\n    },\n    changeEmail: (state, action) => {\n      state.email = action.payload;\n    }\n  }\n});\nexport const {\n  addUser,\n  changeEmail\n} = userSlice.actions;","map":{"version":3,"names":["createSlice","initialState","name","username","email","userSlice","reducers","addUser","state","action","payload","changeEmail","actions"],"sources":["C:/react/proyects-master/whatsapp-clone/frontend/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  username: \"\",\r\n  email: \"\",\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      const { name, username, email } = action.payload;\r\n      state.name = name;\r\n      state.username = username;\r\n      state.email = email;\r\n    },\r\n    changeEmail: (state, action) => {\r\n      state.email = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addUser, changeEmail } = userSlice.actions;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACnCE,IAAI,EAAE,MAAM;EACZD,YAAY;EACZK,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAM;QAAEP,IAAI;QAAEC,QAAQ;QAAEC;MAAM,CAAC,GAAGK,MAAM,CAACC,OAAO;MAChDF,KAAK,CAACN,IAAI,GAAGA,IAAI;MACjBM,KAAK,CAACL,QAAQ,GAAGA,QAAQ;MACzBK,KAAK,CAACJ,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDO,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,OAAO;EAAEI;AAAY,CAAC,GAAGN,SAAS,CAACO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}